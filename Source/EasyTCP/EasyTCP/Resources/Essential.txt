public void Connect(TcpClient Client)
{
	this.Client = Client;
	Client.NoDelay = true;

	NS = Client.GetStream();
	BR = new BinaryReader(NS, Encoding.Unicode);
	var BW = new BinaryWriter(NS);

	BW.Write(Version.Major);
	BW.Write(Version.Minor);

	var Major = BR.ReadInt32();
	BR.ReadInt32(); // Skip Minor

	if (Major != Version.Major)
		throw new Exception("Version Mismatch");

	T.Start();
}

public void SendCloseRequest()
{
	if (Closing) return;

	Closing = true;
	WriteCode(0xFFFF);
	Flush();
}

public void Wait4Close(int MilliSeconds = 3000) { T.Join(MilliSeconds); }

[Obsolete]
public void ForceClose() { }

private void WriteCode(ushort Code)
{
	BW.Write(Code);
	MS.Position += 4;
}

private void Flush()
{
	var Len = (int)(MS.Position - 6);
	MS.Position = 2;
	BW.Write(Len);

	try
	{
		NS.Write(B, 0, Len + 6);
	}
	catch (Exception E)
	{
		Closing = true;
		fireException(E);
	}

	MS.Position = 0;
}

private void ExclusiveRun(Action A)
{
	try { M.WaitOne(); A(); }
	finally { M.ReleaseMutex(); }
}